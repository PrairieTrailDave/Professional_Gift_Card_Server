@using Professional_Gift_Card_System.Models
@model GiftCardActivateModel
@using Resources
@{
    ViewBag.Title = DisplayItems.Activate;
    Layout = "~/Views/Shared/_MerchantLayout.cshtml";
}

<p></p>

    <h2>@DisplayItems.ActivateACard</h2>
    <p>
        @DisplayItems.SwipeAndFill
    </p>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, DisplayItems.ActivateUnsuccessfull)

        @Html.HiddenFor(m => m.LocalTime)
        @Html.HiddenFor(m => m.CardSwipe)
        Html.RenderPartial("_MerchantIDPartial");

        <div>
            <table>

            <tr>
            <td>
                
                <table>

                <tr>
                <td>
                    <div class="editor-label">
                        @DisplayItems.ActivateCardSwipe
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        <input type="text" id="RawCard1" name="RawCard1" onkeydown="return KillReturn(event)"  
                               onkeypress="return KillReturn(event);" onkeyup="return KillReturn(event);" onblur="SaveCard(this.value); SaveTime();" />
                        @Html.ValidationMessageFor(model => model.CardSwipe)
                    </div>

                </td>
                </tr>

                
                <tr>
                <td>
                <div class="editor-label">
                    @DisplayItems.AmountToPutOnCard
                </div>
                </td>
                <td>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Amount, new { onblur = "this.value=FormatAmount(this.value);" })
                    @Html.ValidationMessageFor(m => m.Amount)
                </div>
                </td>
                </tr>
                </table>
                
            </td>
            <td>
            @if (ViewBag.ActivateAmounts != null)
            {
                foreach (String amt in ViewBag.ActivateAmounts)
                {
                <input type="button" value="@amt" onclick="StoreValue(this.value)" />
                <br />
                }
            }
            
            </td>
            </tr>
            </table>
                  
                <p>
                    <input type="submit" value="@DisplayItems.Activate"/>
                </p>
        </div>
     } 

    <div>
        @Html.ActionLink(DisplayItems.BackToList, (string)TempData["ReturnAddress"])
    </div>



<script type="text/javascript">
    FocusPoint = 'RawCard1';

</script>

