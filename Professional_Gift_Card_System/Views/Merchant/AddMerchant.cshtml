@using Professional_Gift_Card_System.Models
@model AddMerchantModel


@{
    ViewBag.Title = "New Merchant";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



    <h2>Add New Merchant</h2>

    @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "Please correct the errors and try again", new { @class = "text-danger" } )

        <fieldset>
        <table>
        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.MerchantName)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.MerchantName, new
           {
               id = "MerchantNameField",
               onblur = "copyContents('MerchantNameField', 'ShippingLine1');CopyAndCenter('MerchantNameField', 'HeaderLine1', 40)"
           })
                @Html.ValidationMessageFor(model => model.MerchantName)
            </div>
        </td>
        </tr>


        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.MerchantID)
                <br />
                <input type="submit" name="SuggestValues" value="Suggest Values" />
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.MerchantID)
                @Html.ValidationMessageFor(model => model.MerchantID)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.MerchantUserName)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.MerchantUserName)
                @Html.ValidationMessageFor(model => model.MerchantUserName)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.MerchantPassword)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.MerchantPassword)
                @Html.ValidationMessageFor(model => model.MerchantPassword)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.TaxID)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.TaxID)
                @Html.ValidationMessageFor(model => model.TaxID)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Address1)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Address1, new
           {
               id = "MerchantAddressField",
               onblur = "copyContents('MerchantAddressField', 'ShippingLine2');CopyAndCenter('MerchantAddressField', 'HeaderLine2', 40);copyContents('MerchantNameField', 'ShippingLine1');CopyAndCenter('MerchantNameField', 'HeaderLine1', 40)"
           })
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Address2)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Address2, new
           {
               id = "MerchantAddress2Field",
               onblur = "copyContents('MerchantAddress2Field', 'ShippingLine3');CopyAndCenter('MerchantAddress2Field', 'HeaderLine3', 40)"
           })
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.City)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.City, new
           {
               id = "MerchantCityField"
           })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.State)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.State, new
           {
               id = "MerchantStateField"
           })
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Country)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Country)
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.PostalCode)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.PostalCode, new
           {
               id = "MerchantZipField",
               onblur = "MergeAddress('ShippingLine4', 'MerchantCityField', 'MerchantStateField', 'MerchantZipField');CopyAndCenter('ShippingLine4', 'HeaderLine4', 40);"
           })
                @Html.ValidationMessageFor(model => model.PostalCode)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Phone)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Phone, new
           {
               id = "MerchantPhoneField",
               onblur = "CopyAndCenter('MerchantPhoneField', 'HeaderLine5', 40)"
           })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.EMail)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.EMail)
                @Html.ValidationMessageFor(model => model.EMail)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ContactPerson)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ContactPerson)
                @Html.ValidationMessageFor(model => model.ContactPerson)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ContactPhone)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ContactPhone)
                @Html.ValidationMessageFor(model => model.ContactPhone)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.TimeZone)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @(Html.DropDownListFor(model => model.TimeZone, new SelectList(new[] { 
                    "Eastern Standard Time", "Central Standard Time", "Mountain Standard Time","Pacific Standard Time","Alaska Standard Time","Hawaii Standard Time" })))
                @Html.ValidationMessageFor(model => model.TimeZone)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.RestaurantRetail)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownList("RestaurantRetail", new SelectList(new[] { "Retail", "Restaurant" }))
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.ValidationMessageFor(model => model.RestaurantRetail)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.AskForClerkServer)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownList("AskForClerkServer", new SelectList(new[] { "Yes", "No" }))

            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.GiftActive)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownList("GiftActive", new SelectList(new[] { "Yes", "No" }))
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.ValidationMessageFor(model => model.GiftActive)
            </div>
        </td>
        </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.AllowSplitTender)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("AllowSplitTender", new SelectList(new[] { "Yes", "No" }))

                    </div>
                </td>
            </tr>
            
        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.MerchantBillingCycle)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownList("MerchantBillingCycle", new SelectList(new[] { "Monthly", "Quarterly", "Yearly" }))
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.ValidationMessageFor(model => model.MerchantBillingCycle)
            </div>
        </td>
        </tr>


        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShippingAddressLine1)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShippingAddressLine1, new {id="ShippingLine1"})
                @Html.ValidationMessageFor(model => model.ShippingAddressLine1)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShippingAddressLine2)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShippingAddressLine2, new {id="ShippingLine2"})
                @Html.ValidationMessageFor(model => model.ShippingAddressLine2)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShippingAddressLine3)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShippingAddressLine3, new {id="ShippingLine3"})
                @Html.ValidationMessageFor(model => model.ShippingAddressLine3)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShippingAddressLine4)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ShippingAddressLine4, new {id="ShippingLine4"})
                @Html.ValidationMessageFor(model => model.ShippingAddressLine4)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptHeaderLine1)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptHeaderLine1, new {id="HeaderLine1"})
                @Html.ValidationMessageFor(model => model.ReceiptHeaderLine1)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptHeaderLine2)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptHeaderLine2, new {id="HeaderLine2"})
                @Html.ValidationMessageFor(model => model.ReceiptHeaderLine2)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptHeaderLine3)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptHeaderLine3, new {id="HeaderLine3"})
                @Html.ValidationMessageFor(model => model.ReceiptHeaderLine3)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptHeaderLine4)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptHeaderLine4, new {id="HeaderLine4"})
                @Html.ValidationMessageFor(model => model.ReceiptHeaderLine4)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptHeaderLine5)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptHeaderLine5, new {id="HeaderLine5"})
                @Html.ValidationMessageFor(model => model.ReceiptHeaderLine5)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptFooterLine1)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptFooterLine1)
                @Html.ValidationMessageFor(model => model.ReceiptFooterLine1)
            </div>
        </td>
        </tr>

        <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ReceiptFooterLine2)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ReceiptFooterLine2)
                @Html.ValidationMessageFor(model => model.ReceiptFooterLine2)
            </div>
        </td>
        </tr>
        </table>            
            <p>
                <input type="submit" name="AddMerchant" value="Add Merchant" />
            </p>
        </fieldset>

     } 

    <div>
        @Html.ActionLink("Back to List", "SelectMerchantForEdit")
    </div>




